// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/scheduler.proto

package scheduler

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecutionMethod int32

const (
	ExecutionMethod_EXECUTION_METHOD_INVALID ExecutionMethod = 0
	ExecutionMethod_EXECUTION_METHOD_POST    ExecutionMethod = 1
	ExecutionMethod_EXECUTION_METHOD_GET     ExecutionMethod = 2
)

var ExecutionMethod_name = map[int32]string{
	0: "EXECUTION_METHOD_INVALID",
	1: "EXECUTION_METHOD_POST",
	2: "EXECUTION_METHOD_GET",
}

var ExecutionMethod_value = map[string]int32{
	"EXECUTION_METHOD_INVALID": 0,
	"EXECUTION_METHOD_POST":    1,
	"EXECUTION_METHOD_GET":     2,
}

func (x ExecutionMethod) String() string {
	return proto.EnumName(ExecutionMethod_name, int32(x))
}

func (ExecutionMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_49bf124e81298781, []int{0}
}

type ScheduleRemoteTaskRequest struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Retries              int32                  `protobuf:"varint,2,opt,name=retries,proto3" json:"retries,omitempty"`
	ScheduleTime         *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=schedule_time,json=scheduleTime,proto3" json:"schedule_time,omitempty"`
	Config               *RemoteExecutionConfig `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ScheduleRemoteTaskRequest) Reset()         { *m = ScheduleRemoteTaskRequest{} }
func (m *ScheduleRemoteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleRemoteTaskRequest) ProtoMessage()    {}
func (*ScheduleRemoteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49bf124e81298781, []int{0}
}

func (m *ScheduleRemoteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleRemoteTaskRequest.Unmarshal(m, b)
}
func (m *ScheduleRemoteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleRemoteTaskRequest.Marshal(b, m, deterministic)
}
func (m *ScheduleRemoteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleRemoteTaskRequest.Merge(m, src)
}
func (m *ScheduleRemoteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleRemoteTaskRequest.Size(m)
}
func (m *ScheduleRemoteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleRemoteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleRemoteTaskRequest proto.InternalMessageInfo

func (m *ScheduleRemoteTaskRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ScheduleRemoteTaskRequest) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *ScheduleRemoteTaskRequest) GetScheduleTime() *timestamp.Timestamp {
	if m != nil {
		return m.ScheduleTime
	}
	return nil
}

func (m *ScheduleRemoteTaskRequest) GetConfig() *RemoteExecutionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type ScheduleRemoteTaskResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleRemoteTaskResponse) Reset()         { *m = ScheduleRemoteTaskResponse{} }
func (m *ScheduleRemoteTaskResponse) String() string { return proto.CompactTextString(m) }
func (*ScheduleRemoteTaskResponse) ProtoMessage()    {}
func (*ScheduleRemoteTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49bf124e81298781, []int{1}
}

func (m *ScheduleRemoteTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleRemoteTaskResponse.Unmarshal(m, b)
}
func (m *ScheduleRemoteTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleRemoteTaskResponse.Marshal(b, m, deterministic)
}
func (m *ScheduleRemoteTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleRemoteTaskResponse.Merge(m, src)
}
func (m *ScheduleRemoteTaskResponse) XXX_Size() int {
	return xxx_messageInfo_ScheduleRemoteTaskResponse.Size(m)
}
func (m *ScheduleRemoteTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleRemoteTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleRemoteTaskResponse proto.InternalMessageInfo

type RemoteExecutionConfig struct {
	Method               ExecutionMethod   `protobuf:"varint,1,opt,name=method,proto3,enum=scheduler.v1.ExecutionMethod" json:"method,omitempty"`
	Url                  string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Headers              map[string]string `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 []byte            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Timeout              uint32            `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	ExpectedCodes        []uint32          `protobuf:"varint,6,rep,packed,name=expected_codes,json=expectedCodes,proto3" json:"expected_codes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RemoteExecutionConfig) Reset()         { *m = RemoteExecutionConfig{} }
func (m *RemoteExecutionConfig) String() string { return proto.CompactTextString(m) }
func (*RemoteExecutionConfig) ProtoMessage()    {}
func (*RemoteExecutionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_49bf124e81298781, []int{2}
}

func (m *RemoteExecutionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteExecutionConfig.Unmarshal(m, b)
}
func (m *RemoteExecutionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteExecutionConfig.Marshal(b, m, deterministic)
}
func (m *RemoteExecutionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteExecutionConfig.Merge(m, src)
}
func (m *RemoteExecutionConfig) XXX_Size() int {
	return xxx_messageInfo_RemoteExecutionConfig.Size(m)
}
func (m *RemoteExecutionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteExecutionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteExecutionConfig proto.InternalMessageInfo

func (m *RemoteExecutionConfig) GetMethod() ExecutionMethod {
	if m != nil {
		return m.Method
	}
	return ExecutionMethod_EXECUTION_METHOD_INVALID
}

func (m *RemoteExecutionConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RemoteExecutionConfig) GetHeaders() map[string]string {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *RemoteExecutionConfig) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *RemoteExecutionConfig) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RemoteExecutionConfig) GetExpectedCodes() []uint32 {
	if m != nil {
		return m.ExpectedCodes
	}
	return nil
}

func init() {
	proto.RegisterEnum("scheduler.v1.ExecutionMethod", ExecutionMethod_name, ExecutionMethod_value)
	proto.RegisterType((*ScheduleRemoteTaskRequest)(nil), "scheduler.v1.ScheduleRemoteTaskRequest")
	proto.RegisterType((*ScheduleRemoteTaskResponse)(nil), "scheduler.v1.ScheduleRemoteTaskResponse")
	proto.RegisterType((*RemoteExecutionConfig)(nil), "scheduler.v1.RemoteExecutionConfig")
	proto.RegisterMapType((map[string]string)(nil), "scheduler.v1.RemoteExecutionConfig.HeadersEntry")
}

func init() {
	proto.RegisterFile("v1/scheduler.proto", fileDescriptor_49bf124e81298781)
}

var fileDescriptor_49bf124e81298781 = []byte{
	// 471 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xc5, 0x76, 0x9b, 0x2a, 0x93, 0x0f, 0xac, 0x51, 0x2b, 0x6d, 0xad, 0x22, 0xac, 0x20, 0x84,
	0xc5, 0xc1, 0xa1, 0x41, 0x48, 0xa8, 0x1c, 0x10, 0xa4, 0x16, 0x0d, 0xa2, 0x0d, 0xda, 0x18, 0x84,
	0xb8, 0x44, 0x89, 0x3d, 0x4d, 0xac, 0x26, 0xd9, 0xe0, 0x5d, 0x47, 0x8d, 0xf8, 0x6d, 0x9c, 0xf8,
	0x63, 0xc8, 0x5f, 0xa1, 0x25, 0x45, 0x70, 0xdb, 0x99, 0x79, 0xb3, 0xf3, 0xde, 0x9b, 0x01, 0x5c,
	0x1d, 0xb7, 0x65, 0x30, 0xa5, 0x30, 0x99, 0x51, 0xec, 0x2e, 0x63, 0xa1, 0x04, 0xd6, 0x7f, 0x27,
	0x56, 0xc7, 0xd6, 0xc3, 0x89, 0x10, 0x93, 0x19, 0xb5, 0xb3, 0xda, 0x38, 0xb9, 0x6c, 0xab, 0x68,
	0x4e, 0x52, 0x8d, 0xe6, 0xcb, 0x1c, 0xde, 0xfa, 0xa9, 0xc1, 0xe1, 0xa0, 0xe8, 0xe0, 0x34, 0x17,
	0x8a, 0xfc, 0x91, 0xbc, 0xe2, 0xf4, 0x2d, 0x21, 0xa9, 0xb0, 0x09, 0x7a, 0x14, 0x32, 0xcd, 0xd6,
	0x9c, 0x2a, 0xd7, 0xa3, 0x10, 0x19, 0xec, 0xc5, 0xa4, 0xe2, 0x88, 0x24, 0xd3, 0x6d, 0xcd, 0xd9,
	0xe5, 0x65, 0x88, 0xaf, 0xa1, 0x51, 0x0e, 0x1e, 0xa6, 0x33, 0x98, 0x61, 0x6b, 0x4e, 0xad, 0x63,
	0xb9, 0x39, 0x01, 0xb7, 0x24, 0xe0, 0xfa, 0x25, 0x01, 0xbe, 0x61, 0x9a, 0xa6, 0xf0, 0x15, 0x54,
	0x02, 0xb1, 0xb8, 0x8c, 0x26, 0x6c, 0x27, 0xeb, 0x7c, 0xe4, 0xde, 0x14, 0xe2, 0xe6, 0xdc, 0xbc,
	0x6b, 0x0a, 0x12, 0x15, 0x89, 0x45, 0x37, 0x83, 0xf2, 0xa2, 0xa5, 0x75, 0x04, 0xd6, 0x5d, 0x22,
	0xe4, 0x52, 0x2c, 0x24, 0xb5, 0x7e, 0xe8, 0x70, 0x70, 0x67, 0x3f, 0xbe, 0x80, 0xca, 0x9c, 0xd4,
	0x54, 0xe4, 0x1a, 0x9b, 0x9d, 0x07, 0xb7, 0x87, 0x6e, 0xe0, 0xe7, 0x19, 0x88, 0x17, 0x60, 0x34,
	0xc1, 0x48, 0xe2, 0x59, 0x66, 0x41, 0x95, 0xa7, 0x4f, 0x7c, 0x0f, 0x7b, 0x53, 0x1a, 0x85, 0x14,
	0x4b, 0x66, 0xd8, 0x86, 0x53, 0xeb, 0x3c, 0xfb, 0x0f, 0xfa, 0xee, 0x59, 0xde, 0xe2, 0x2d, 0x54,
	0xbc, 0xe6, 0xe5, 0x07, 0x88, 0xb0, 0x33, 0x16, 0xe1, 0x3a, 0xf3, 0xa1, 0xce, 0xb3, 0x77, 0x6a,
	0x7c, 0xea, 0xaa, 0x48, 0x14, 0xdb, 0xb5, 0x35, 0xa7, 0xc1, 0xcb, 0x10, 0x1f, 0x43, 0x93, 0xae,
	0x97, 0x14, 0x28, 0x0a, 0x87, 0x81, 0x08, 0x49, 0xb2, 0x8a, 0x6d, 0x38, 0x0d, 0xde, 0x28, 0xb3,
	0xdd, 0x34, 0x69, 0x9d, 0x40, 0xfd, 0xe6, 0xb4, 0x54, 0xc2, 0x15, 0xad, 0x8b, 0xd5, 0xa6, 0x4f,
	0xdc, 0x87, 0xdd, 0xd5, 0x68, 0x96, 0x50, 0x21, 0x2b, 0x0f, 0x4e, 0xf4, 0x97, 0xda, 0xd3, 0x10,
	0xee, 0xff, 0xe1, 0x04, 0x1e, 0x01, 0xf3, 0xbe, 0x78, 0xdd, 0x4f, 0x7e, 0xaf, 0x7f, 0x31, 0x3c,
	0xf7, 0xfc, 0xb3, 0xfe, 0xe9, 0xb0, 0x77, 0xf1, 0xf9, 0xcd, 0x87, 0xde, 0xa9, 0x79, 0x0f, 0x0f,
	0xe1, 0x60, 0xab, 0xfa, 0xb1, 0x3f, 0xf0, 0x4d, 0x0d, 0x19, 0xec, 0x6f, 0x95, 0xde, 0x79, 0xbe,
	0xa9, 0x77, 0xbe, 0x83, 0x59, 0xee, 0x30, 0x1e, 0x50, 0xbc, 0x8a, 0x02, 0xc2, 0x09, 0xe0, 0xf6,
	0x5e, 0xf1, 0xc9, 0x6d, 0x6f, 0xff, 0x7a, 0xbe, 0x96, 0xf3, 0x6f, 0x60, 0x7e, 0x22, 0x6f, 0x6b,
	0x5f, 0xab, 0x1b, 0xe8, 0xb8, 0x92, 0x1d, 0xeb, 0xf3, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x11,
	0xb2, 0x78, 0xfe, 0x5f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SchedulerServiceClient is the client API for SchedulerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SchedulerServiceClient interface {
	ScheduleRemoteTask(ctx context.Context, in *ScheduleRemoteTaskRequest, opts ...grpc.CallOption) (*ScheduleRemoteTaskResponse, error)
}

type schedulerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSchedulerServiceClient(cc grpc.ClientConnInterface) SchedulerServiceClient {
	return &schedulerServiceClient{cc}
}

func (c *schedulerServiceClient) ScheduleRemoteTask(ctx context.Context, in *ScheduleRemoteTaskRequest, opts ...grpc.CallOption) (*ScheduleRemoteTaskResponse, error) {
	out := new(ScheduleRemoteTaskResponse)
	err := c.cc.Invoke(ctx, "/scheduler.v1.SchedulerService/ScheduleRemoteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SchedulerServiceServer is the server API for SchedulerService service.
type SchedulerServiceServer interface {
	ScheduleRemoteTask(context.Context, *ScheduleRemoteTaskRequest) (*ScheduleRemoteTaskResponse, error)
}

// UnimplementedSchedulerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSchedulerServiceServer struct {
}

func (*UnimplementedSchedulerServiceServer) ScheduleRemoteTask(ctx context.Context, req *ScheduleRemoteTaskRequest) (*ScheduleRemoteTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScheduleRemoteTask not implemented")
}

func RegisterSchedulerServiceServer(s *grpc.Server, srv SchedulerServiceServer) {
	s.RegisterService(&_SchedulerService_serviceDesc, srv)
}

func _SchedulerService_ScheduleRemoteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleRemoteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServiceServer).ScheduleRemoteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scheduler.v1.SchedulerService/ScheduleRemoteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServiceServer).ScheduleRemoteTask(ctx, req.(*ScheduleRemoteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SchedulerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scheduler.v1.SchedulerService",
	HandlerType: (*SchedulerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScheduleRemoteTask",
			Handler:    _SchedulerService_ScheduleRemoteTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/scheduler.proto",
}
